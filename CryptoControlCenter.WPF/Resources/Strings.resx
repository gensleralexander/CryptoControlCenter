<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddNewWallet" xml:space="preserve">
    <value>Add new Wallet</value>
  </data>
  <data name="AddTransaction" xml:space="preserve">
    <value>Add Transaction</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Asset" xml:space="preserve">
    <value>Asset</value>
  </data>
  <data name="Assets" xml:space="preserve">
    <value>Assets</value>
  </data>
  <data name="Before" xml:space="preserve">
    <value>before</value>
  </data>
  <data name="Blacklist" xml:space="preserve">
    <value>Coin Blacklist</value>
  </data>
  <data name="BlacklistInfo" xml:space="preserve">
    <value>Add every coin here, that you want to ignore (scamcoins, micro-coins, etc.)</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Do you want to continue?</value>
  </data>
  <data name="CryptoDisclaimer" xml:space="preserve">
    <value>CRYPTOCURRENCIES ARE A HIGH RISK INVESTMENT AND THEREFORE MAY NOT BE SUITABLE FOR ALL MEMBERS OF THE PUBLIC AND ALL TYPES OF INVESTORS. BEFORE TRADING WITH CRYPTOCURRENCIES, MAKE SURE YOU UNDERSTAND THE NATURE, COMPLEXITY AND RISKS INHERENT IN THEM.</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteTransaction" xml:space="preserve">
    <value>Delete Transaction</value>
  </data>
  <data name="DeleteTransactionConfirmation" xml:space="preserve">
    <value>Do you really want to delete this transaction? This cannot be reversed.</value>
  </data>
  <data name="DepWith" xml:space="preserve">
    <value>Deposits &amp; Withdrawals</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="Distributions" xml:space="preserve">
    <value>Distributions</value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>This is an example text.</value>
  </data>
  <data name="Exchange" xml:space="preserve">
    <value>Cryptoexchange</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="FeeValue" xml:space="preserve">
    <value>Fee Value in €</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Only show rows that need inspection</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="GenerateTax" xml:space="preserve">
    <value>Generate Tax Report</value>
  </data>
  <data name="GenericWallet" xml:space="preserve">
    <value>Generic Wallet</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading ...</value>
  </data>
  <data name="LoadMissingValues" xml:space="preserve">
    <value>Load missing values</value>
  </data>
  <data name="LoadMissingWarning" xml:space="preserve">
    <value>This action tries to load missing values via linking transactions and requesting historic price data from exchanges. Depending on the amount of transactions, this can take several minutes.</value>
  </data>
  <data name="LogExport" xml:space="preserve">
    <value>Export Logs</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Error Logging</value>
  </data>
  <data name="MissingValues" xml:space="preserve">
    <value>Database has missing or incorrect values. Please switch to Database Tab and synchronize/fill missing/correct wrong informations. It is advised to add all wallets first for best results.</value>
  </data>
  <data name="Not" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="ReportCreated" xml:space="preserve">
    <value>Tax report successfully created:</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectYear" xml:space="preserve">
    <value>Select Year</value>
  </data>
  <data name="SelectYearFull" xml:space="preserve">
    <value>Please select the year, for which the tax report should be generated:</value>
  </data>
  <data name="SoftwareLicense" xml:space="preserve">
    <value>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</value>
  </data>
  <data name="StartingPoint" xml:space="preserve">
    <value>Start at date</value>
  </data>
  <data name="Sync" xml:space="preserve">
    <value>Sync API-based</value>
  </data>
  <data name="Taxfree" xml:space="preserve">
    <value>Taxfree</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Transactions" xml:space="preserve">
    <value>Transactions</value>
  </data>
  <data name="TransactionTime" xml:space="preserve">
    <value>Transaction Time</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnhandledException" xml:space="preserve">
    <value>An unhandled exception has occured: </value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value in €</value>
  </data>
  <data name="Wallets" xml:space="preserve">
    <value>Wallets</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="WarningDatabase" xml:space="preserve">
    <value>Warning! Editing values can lead to database inconsistency. Proceed with caution.</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>Font Size</value>
  </data>
</root>